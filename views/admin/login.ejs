<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body class="login-body">
    <div class="login-container">
        <h1>ChatBot Platform</h1>
        
        <div class="tabs">
            <div class="tab active" onclick="showTab('login')">Login</div>
            <div class="tab" onclick="showTab('register')">Cadastro</div>
        </div>

        <div id="error-message" class="error"></div>

        <!-- Login Form -->
        <div id="login-tab" class="tab-content active">
            <form id="login-form">
                <div class="form-group">
                    <label for="login-email">Email</label>
                    <input type="email" id="login-email" name="email" required>
                </div>
                <div class="form-group">
                    <label for="login-password">Senha</label>
                    <input type="password" id="login-password" name="password" required>
                </div>
                <button type="submit">Entrar</button>
            </form>
        </div>

        <!-- Register Form -->
        <div id="register-tab" class="tab-content">
            <form id="register-form">
                <div class="form-group">
                    <label for="register-name">Nome</label>
                    <input type="text" id="register-name" name="name" required>
                </div>
                <div class="form-group">
                    <label for="register-email">Email</label>
                    <input type="email" id="register-email" name="email" required>
                </div>
                <div class="form-group">
                    <label for="register-company">Empresa (opcional)</label>
                    <input type="text" id="register-company" name="company">
                </div>
                <div class="form-group">
                    <label for="register-password">Senha</label>
                    <input type="password" id="register-password" name="password" required minlength="6">
                </div>
                <button type="submit">Cadastrar</button>
            </form>
        </div>
    </div>

    <script>
        console.log('üîê Inicializando p√°gina de login...');
        
        function showTab(tabName) {
            console.log('üìå Mudando para aba:', tabName);
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            document.querySelector(`.tab:nth-child(${tabName === 'login' ? 1 : 2})`).classList.add('active');
            document.getElementById(`${tabName}-tab`).classList.add('active');
            document.getElementById('error-message').style.display = 'none';
        }

        document.getElementById('login-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            console.log('üîê Submetendo formul√°rio de login...');
            await handleAuth('/api/login', new FormData(e.target));
        });

        document.getElementById('register-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            console.log('üìù Submetendo formul√°rio de registro...');
            await handleAuth('/api/register', new FormData(e.target));
        });

        async function handleAuth(url, formData) {
            const data = Object.fromEntries(formData);
            console.log('üì§ Enviando dados para:', url, data);
            
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                console.log('üì° Resposta recebida:', response.status);
                const result = await response.json();
                console.log('üì® Conte√∫do da resposta:', result);

                if (response.ok) {
                    console.log('‚úÖ Autentica√ß√£o bem-sucedida');
                    localStorage.setItem('token', result.token);
                    localStorage.setItem('user', JSON.stringify(result.user));
                    window.location.href = '/admin/dashboard';
                } else {
                    console.log('‚ùå Erro na autentica√ß√£o:', result.message);
                    showError(result.message);
                }
            } catch (error) {
                console.error('üí• ERRO de conex√£o:', error);
                showError('Erro de conex√£o com o servidor');
            }
        }

        function showError(message) {
            console.log('üö® Exibindo erro:', message);
            const errorDiv = document.getElementById('error-message');
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
        }

        // Verificar se j√° est√° logado
        const existingToken = localStorage.getItem('token');
        console.log('üîç Verificando token existente:', existingToken ? 'PRESENTE' : 'AUSENTE');
        
        if (existingToken) {
            console.log('üîÑ Redirecionando para dashboard...');
            window.location.href = '/admin/dashboard';
        }

        console.log('‚úÖ P√°gina de login inicializada');
    </script>
</body>
</html>